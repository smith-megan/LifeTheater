/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as BlahRouteImport } from './routes/blah'
import { Route as PackagesRouteImport } from './routes/Packages'
import { Route as ContactRouteImport } from './routes/Contact'

const BlahRoute = BlahRouteImport.update({
  id: '/blah',
  path: '/blah',
  getParentRoute: () => rootRouteImport,
} as any)
const PackagesRoute = PackagesRouteImport.update({
  id: '/Packages',
  path: '/Packages',
  getParentRoute: () => rootRouteImport,
} as any)
const ContactRoute = ContactRouteImport.update({
  id: '/Contact',
  path: '/Contact',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/Contact': typeof ContactRoute
  '/Packages': typeof PackagesRoute
  '/blah': typeof BlahRoute
}
export interface FileRoutesByTo {
  '/Contact': typeof ContactRoute
  '/Packages': typeof PackagesRoute
  '/blah': typeof BlahRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/Contact': typeof ContactRoute
  '/Packages': typeof PackagesRoute
  '/blah': typeof BlahRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/Contact' | '/Packages' | '/blah'
  fileRoutesByTo: FileRoutesByTo
  to: '/Contact' | '/Packages' | '/blah'
  id: '__root__' | '/Contact' | '/Packages' | '/blah'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  ContactRoute: typeof ContactRoute
  PackagesRoute: typeof PackagesRoute
  BlahRoute: typeof BlahRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/blah': {
      id: '/blah'
      path: '/blah'
      fullPath: '/blah'
      preLoaderRoute: typeof BlahRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/Packages': {
      id: '/Packages'
      path: '/Packages'
      fullPath: '/Packages'
      preLoaderRoute: typeof PackagesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/Contact': {
      id: '/Contact'
      path: '/Contact'
      fullPath: '/Contact'
      preLoaderRoute: typeof ContactRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  ContactRoute: ContactRoute,
  PackagesRoute: PackagesRoute,
  BlahRoute: BlahRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
